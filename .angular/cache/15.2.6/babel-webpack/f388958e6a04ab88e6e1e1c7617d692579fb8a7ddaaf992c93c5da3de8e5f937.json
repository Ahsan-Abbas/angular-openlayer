{"ast":null,"code":"import _asyncToGenerator from \"D:/Angular Projects/angular-openlayers/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BaseSource } from './basesource.js';\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n  fetchSlice(slice, signal) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        const blob = _this.file.slice(slice.offset, slice.offset + slice.length);\n        const reader = new FileReader();\n        reader.onload = event => resolve(event.target.result);\n        reader.onerror = reject;\n        reader.onabort = reject;\n        reader.readAsArrayBuffer(blob);\n        if (signal) {\n          signal.addEventListener('abort', () => reader.abort());\n        }\n      });\n    })();\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}